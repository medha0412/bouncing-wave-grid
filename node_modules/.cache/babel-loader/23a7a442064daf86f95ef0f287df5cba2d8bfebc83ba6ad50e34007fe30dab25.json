{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tanmay\\\\Desktop\\\\assignment2 2\\\\assignment2\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [gridSize, setGridSize] = useState({\n    rows: 15,\n    cols: 20\n  });\n  const [wavePosition, setWavePosition] = useState(0);\n  const [waveDirection, setWaveDirection] = useState(1);\n  const [colorPhase, setColorPhase] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(true);\n  const [speed, setSpeed] = useState(150);\n\n  // Generate 4-grid color pattern with smooth wave transitions\n  const generateWavePattern = useCallback((row, time) => {\n    const waveWidth = 6; // Wave width for each grid section\n    const centerPosition = wavePosition;\n    return Array.from({\n      length: gridSize.cols\n    }, (_, col) => {\n      // Calculate distance from wave center\n      const distanceFromCenter = Math.abs(col - centerPosition);\n\n      // Dynamic wave width with smoother variations\n      const dynamicWaveWidth = waveWidth + Math.sin(time * 0.005) * 2 + Math.cos(time * 0.008) * 1.5;\n      const waveIntensity = Math.max(0, 1 - Math.pow(distanceFromCenter / (dynamicWaveWidth / 2), 1.2));\n      if (waveIntensity > 0) {\n        // Create gradient within the wave\n        const gradientPosition = (col - (centerPosition - dynamicWaveWidth / 2)) / dynamicWaveWidth;\n        const clampedGradient = Math.max(0, Math.min(1, gradientPosition));\n\n        // Determine which of the 4 grid sections this cell belongs to\n        const gridSection = Math.floor(col / gridSize.cols * 4);\n        const sectionOffset = gridSection * 90 % 360; // 90 degrees per section\n\n        // Enhanced dynamic effects with section-specific variations\n        const rowEffect = Math.sin(row * 0.3 + time * 0.01) * 0.4 + 0.6;\n        const timeEffect = Math.sin(time * 0.02 + col * 0.08) * 0.3 + 0.7;\n        const waveEffect = Math.sin(distanceFromCenter * 0.3 + time * 0.012) * 0.2 + 0.8;\n\n        // Section-specific color phase influence\n        const sectionPhase = time * 0.015 + gridSection * Math.PI / 2;\n        const colorPhaseEffect = Math.sin(sectionPhase + row * 0.2 + col * 0.1) * 0.15 + 0.85;\n\n        // Combine all effects for smooth intensity\n        const dynamicIntensity = waveIntensity * rowEffect * timeEffect * waveEffect * colorPhaseEffect;\n\n        // Enhanced gradient with section-specific variations\n        const gradientVariation = Math.sin(time * 0.02 + row * 0.25 + gridSection * 0.5) * 0.3 + 0.7;\n        const dynamicGradient = clampedGradient * gradientVariation;\n        return {\n          intensity: Math.max(0, Math.min(1, dynamicIntensity * (0.4 + 0.6 * clampedGradient))),\n          gradientPos: Math.max(0, Math.min(1, dynamicGradient)),\n          gridSection: gridSection // Add section info for color generation\n        };\n      }\n      return {\n        intensity: 0,\n        gradientPos: 0,\n        gridSection: 0\n      };\n    });\n  }, [wavePosition, gridSize.cols, colorPhase]);\n\n  // Generate smooth, vibrant colors with enhanced transitions\n  const getColor = (intensity, gradientPos, phase) => {\n    if (intensity === 0) return '#1a1a1a'; // Dark background for empty cells\n\n    // Smoother color transitions - more cycles for gradual changes\n    const totalCycles = 480; // 8 seconds at 100ms intervals for smoother transitions\n    const normalizedPhase = phase / totalCycles;\n\n    // Create smooth hue rotation with multiple color cycles\n    const baseHue = normalizedPhase * 360 * 2 % 360; // Double rotation for more variety\n    const hueVariation = Math.sin(normalizedPhase * Math.PI * 4) * 30; // Add wave-like hue variation\n    const gradientHue = gradientPos * 60; // Gradient hue spread\n\n    // Smooth hue calculation with multiple layers\n    const hue = (baseHue + hueVariation + gradientHue) % 360;\n\n    // Enhanced saturation with smooth transitions\n    const saturationBase = 80;\n    const saturationVariation = Math.sin(normalizedPhase * Math.PI * 3) * 15;\n    const saturation = Math.max(70, Math.min(100, saturationBase + saturationVariation + intensity * 20));\n\n    // Smooth lightness with wave-like variations\n    const lightnessBase = 45;\n    const lightnessVariation = Math.sin(normalizedPhase * Math.PI * 2) * 20;\n    const lightness = Math.max(35, Math.min(80, lightnessBase + lightnessVariation + intensity * 30));\n\n    // Add subtle alpha for depth\n    const alpha = 0.9 + intensity * 0.1;\n    return `hsla(${hue}, ${saturation}%, ${lightness}%, ${alpha})`;\n  };\n\n  // Animation loop\n  useEffect(() => {\n    if (!isPlaying) return;\n    const interval = setInterval(() => {\n      setWavePosition(prev => {\n        const newPos = prev + waveDirection;\n        // Reverse direction when reaching edges: start to last, then last to start\n        if (newPos >= gridSize.cols - 3) {\n          setWaveDirection(-1); // Reverse to move left\n          return gridSize.cols - 3;\n        } else if (newPos <= 3) {\n          setWaveDirection(1); // Reverse to move right\n          return 3;\n        }\n        return newPos;\n      });\n      setColorPhase(prev => (prev + 1) % 480); // 480 cycles = 8 seconds at 100ms intervals for smoother transitions\n    }, speed);\n    return () => clearInterval(interval);\n  }, [isPlaying, waveDirection, gridSize.cols, speed]);\n  const handleGridSizeChange = (type, value) => {\n    const newValue = Math.max(5, Math.min(30, parseInt(value) || 5));\n    setGridSize(prev => ({\n      ...prev,\n      [type]: newValue\n    }));\n  };\n  const togglePlayPause = () => {\n    setIsPlaying(prev => !prev);\n  };\n  const resetWave = () => {\n    setWavePosition(3); // Start from near the beginning\n    setWaveDirection(1); // Move right initially\n    setColorPhase(0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"\\u2728 Bouncing Wave Grid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"\\uD83D\\uDCCF Rows: \", gridSize.rows]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: \"5\",\n            max: \"30\",\n            value: gridSize.rows,\n            onChange: e => handleGridSizeChange('rows', e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"\\uD83D\\uDCD0 Cols: \", gridSize.cols]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: \"5\",\n            max: \"30\",\n            value: gridSize.cols,\n            onChange: e => handleGridSizeChange('cols', e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"\\u26A1 Speed: \", speed, \"ms\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: \"50\",\n            max: \"500\",\n            value: speed,\n            onChange: e => setSpeed(parseInt(e.target.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: togglePlayPause,\n          className: \"play-button\",\n          children: isPlaying ? '⏸️ Pause' : '▶️ Play'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: resetWave,\n          className: \"reset-button\",\n          children: \"\\uD83D\\uDD04 Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid\",\n        style: {\n          gridTemplateColumns: `repeat(${gridSize.cols}, 1fr)`,\n          gridTemplateRows: `repeat(${gridSize.rows}, 1fr)`\n        },\n        children: Array.from({\n          length: gridSize.rows\n        }, (_, row) => generateWavePattern(row, colorPhase).map((cell, col) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid-cell\",\n          style: {\n            backgroundColor: getColor(cell.intensity, cell.gradientPos, colorPhase),\n            boxShadow: cell.intensity > 0 ? `0 0 ${cell.intensity * 10}px ${getColor(cell.intensity, cell.gradientPos, colorPhase)}` : 'none'\n          }\n        }, `${row}-${col}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 15\n        }, this)))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info-panel\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-label\",\n            children: \"\\uD83D\\uDCCD Wave Position\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-value\",\n            children: wavePosition.toFixed(1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-label\",\n            children: \"\\uD83C\\uDFA8 Color Phase\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-value\",\n            children: [Math.floor(colorPhase / 80) + 1, \"/6\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-label\",\n            children: \"\\u23F1\\uFE0F Next Color\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-value\",\n            children: [Math.ceil((480 - colorPhase) / 80), \"s\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-label\",\n            children: \"\\uD83E\\uDDED Direction\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-value\",\n            children: waveDirection > 0 ? '→' : '←'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"Xf4pgsMmpovQJjBQGRc5Y7DyFik=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","jsxDEV","_jsxDEV","App","_s","gridSize","setGridSize","rows","cols","wavePosition","setWavePosition","waveDirection","setWaveDirection","colorPhase","setColorPhase","isPlaying","setIsPlaying","speed","setSpeed","generateWavePattern","row","time","waveWidth","centerPosition","Array","from","length","_","col","distanceFromCenter","Math","abs","dynamicWaveWidth","sin","cos","waveIntensity","max","pow","gradientPosition","clampedGradient","min","gridSection","floor","sectionOffset","rowEffect","timeEffect","waveEffect","sectionPhase","PI","colorPhaseEffect","dynamicIntensity","gradientVariation","dynamicGradient","intensity","gradientPos","getColor","phase","totalCycles","normalizedPhase","baseHue","hueVariation","gradientHue","hue","saturationBase","saturationVariation","saturation","lightnessBase","lightnessVariation","lightness","alpha","interval","setInterval","prev","newPos","clearInterval","handleGridSizeChange","type","value","newValue","parseInt","togglePlayPause","resetWave","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","onClick","style","gridTemplateColumns","gridTemplateRows","map","cell","backgroundColor","boxShadow","toFixed","ceil","_c","$RefreshReg$"],"sources":["C:/Users/tanmay/Desktop/assignment2 2/assignment2/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport './App.css';\n\nconst App = () => {\n  const [gridSize, setGridSize] = useState({ rows: 15, cols: 20 });\n  const [wavePosition, setWavePosition] = useState(0);\n  const [waveDirection, setWaveDirection] = useState(1);\n  const [colorPhase, setColorPhase] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(true);\n  const [speed, setSpeed] = useState(150);\n\n  // Generate 4-grid color pattern with smooth wave transitions\n  const generateWavePattern = useCallback((row, time) => {\n    const waveWidth = 6; // Wave width for each grid section\n    const centerPosition = wavePosition;\n    \n    return Array.from({ length: gridSize.cols }, (_, col) => {\n      // Calculate distance from wave center\n      const distanceFromCenter = Math.abs(col - centerPosition);\n      \n      // Dynamic wave width with smoother variations\n      const dynamicWaveWidth = waveWidth + Math.sin(time * 0.005) * 2 + Math.cos(time * 0.008) * 1.5;\n      const waveIntensity = Math.max(0, 1 - Math.pow(distanceFromCenter / (dynamicWaveWidth / 2), 1.2));\n      \n      if (waveIntensity > 0) {\n        // Create gradient within the wave\n        const gradientPosition = (col - (centerPosition - dynamicWaveWidth/2)) / dynamicWaveWidth;\n        const clampedGradient = Math.max(0, Math.min(1, gradientPosition));\n        \n        // Determine which of the 4 grid sections this cell belongs to\n        const gridSection = Math.floor((col / gridSize.cols) * 4);\n        const sectionOffset = (gridSection * 90) % 360; // 90 degrees per section\n        \n        // Enhanced dynamic effects with section-specific variations\n        const rowEffect = Math.sin((row * 0.3) + (time * 0.01)) * 0.4 + 0.6;\n        const timeEffect = Math.sin((time * 0.02) + (col * 0.08)) * 0.3 + 0.7;\n        const waveEffect = Math.sin((distanceFromCenter * 0.3) + (time * 0.012)) * 0.2 + 0.8;\n        \n        // Section-specific color phase influence\n        const sectionPhase = (time * 0.015) + (gridSection * Math.PI / 2);\n        const colorPhaseEffect = Math.sin(sectionPhase + (row * 0.2) + (col * 0.1)) * 0.15 + 0.85;\n        \n        // Combine all effects for smooth intensity\n        const dynamicIntensity = waveIntensity * rowEffect * timeEffect * waveEffect * colorPhaseEffect;\n        \n        // Enhanced gradient with section-specific variations\n        const gradientVariation = Math.sin(time * 0.02 + row * 0.25 + (gridSection * 0.5)) * 0.3 + 0.7;\n        const dynamicGradient = clampedGradient * gradientVariation;\n        \n        return {\n          intensity: Math.max(0, Math.min(1, dynamicIntensity * (0.4 + 0.6 * clampedGradient))),\n          gradientPos: Math.max(0, Math.min(1, dynamicGradient)),\n          gridSection: gridSection // Add section info for color generation\n        };\n      }\n      return { intensity: 0, gradientPos: 0, gridSection: 0 };\n    });\n  }, [wavePosition, gridSize.cols, colorPhase]);\n\n  // Generate smooth, vibrant colors with enhanced transitions\n  const getColor = (intensity, gradientPos, phase) => {\n    if (intensity === 0) return '#1a1a1a'; // Dark background for empty cells\n    \n    // Smoother color transitions - more cycles for gradual changes\n    const totalCycles = 480; // 8 seconds at 100ms intervals for smoother transitions\n    const normalizedPhase = phase / totalCycles;\n    \n    // Create smooth hue rotation with multiple color cycles\n    const baseHue = (normalizedPhase * 360 * 2) % 360; // Double rotation for more variety\n    const hueVariation = Math.sin(normalizedPhase * Math.PI * 4) * 30; // Add wave-like hue variation\n    const gradientHue = gradientPos * 60; // Gradient hue spread\n    \n    // Smooth hue calculation with multiple layers\n    const hue = (baseHue + hueVariation + gradientHue) % 360;\n    \n    // Enhanced saturation with smooth transitions\n    const saturationBase = 80;\n    const saturationVariation = Math.sin(normalizedPhase * Math.PI * 3) * 15;\n    const saturation = Math.max(70, Math.min(100, saturationBase + saturationVariation + intensity * 20));\n    \n    // Smooth lightness with wave-like variations\n    const lightnessBase = 45;\n    const lightnessVariation = Math.sin(normalizedPhase * Math.PI * 2) * 20;\n    const lightness = Math.max(35, Math.min(80, lightnessBase + lightnessVariation + intensity * 30));\n    \n    // Add subtle alpha for depth\n    const alpha = 0.9 + intensity * 0.1;\n    \n    return `hsla(${hue}, ${saturation}%, ${lightness}%, ${alpha})`;\n  };\n\n  // Animation loop\n  useEffect(() => {\n    if (!isPlaying) return;\n\n    const interval = setInterval(() => {\n      setWavePosition(prev => {\n        const newPos = prev + waveDirection;\n        // Reverse direction when reaching edges: start to last, then last to start\n        if (newPos >= gridSize.cols - 3) {\n          setWaveDirection(-1); // Reverse to move left\n          return gridSize.cols - 3;\n        } else if (newPos <= 3) {\n          setWaveDirection(1); // Reverse to move right\n          return 3;\n        }\n        return newPos;\n      });\n      \n      setColorPhase(prev => (prev + 1) % 480); // 480 cycles = 8 seconds at 100ms intervals for smoother transitions\n    }, speed);\n\n    return () => clearInterval(interval);\n  }, [isPlaying, waveDirection, gridSize.cols, speed]);\n\n  const handleGridSizeChange = (type, value) => {\n    const newValue = Math.max(5, Math.min(30, parseInt(value) || 5));\n    setGridSize(prev => ({\n      ...prev,\n      [type]: newValue\n    }));\n  };\n\n  const togglePlayPause = () => {\n    setIsPlaying(prev => !prev);\n  };\n\n  const resetWave = () => {\n    setWavePosition(3); // Start from near the beginning\n    setWaveDirection(1); // Move right initially\n    setColorPhase(0);\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"header\">\n        <h1 className=\"title\">✨ Bouncing Wave Grid</h1>\n        <div className=\"controls\">\n          <div className=\"control-group\">\n            <label>📏 Rows: {gridSize.rows}</label>\n            <input\n              type=\"range\"\n              min=\"5\"\n              max=\"30\"\n              value={gridSize.rows}\n              onChange={(e) => handleGridSizeChange('rows', e.target.value)}\n            />\n          </div>\n          <div className=\"control-group\">\n            <label>📐 Cols: {gridSize.cols}</label>\n            <input\n              type=\"range\"\n              min=\"5\"\n              max=\"30\"\n              value={gridSize.cols}\n              onChange={(e) => handleGridSizeChange('cols', e.target.value)}\n            />\n          </div>\n          <div className=\"control-group\">\n            <label>⚡ Speed: {speed}ms</label>\n            <input\n              type=\"range\"\n              min=\"50\"\n              max=\"500\"\n              value={speed}\n              onChange={(e) => setSpeed(parseInt(e.target.value))}\n            />\n          </div>\n          <button onClick={togglePlayPause} className=\"play-button\">\n            {isPlaying ? '⏸️ Pause' : '▶️ Play'}\n          </button>\n          <button onClick={resetWave} className=\"reset-button\">\n            🔄 Reset\n          </button>\n        </div>\n      </div>\n\n      <div className=\"grid-container\">\n        <div \n          className=\"grid\"\n          style={{\n            gridTemplateColumns: `repeat(${gridSize.cols}, 1fr)`,\n            gridTemplateRows: `repeat(${gridSize.rows}, 1fr)`\n          }}\n        >\n          {Array.from({ length: gridSize.rows }, (_, row) =>\n            generateWavePattern(row, colorPhase).map((cell, col) => (\n              <div\n                key={`${row}-${col}`}\n                className=\"grid-cell\"\n                style={{\n                  backgroundColor: getColor(cell.intensity, cell.gradientPos, colorPhase),\n                  boxShadow: cell.intensity > 0 \n                    ? `0 0 ${cell.intensity * 10}px ${getColor(cell.intensity, cell.gradientPos, colorPhase)}`\n                    : 'none'\n                }}\n              />\n            ))\n          )}\n        </div>\n      </div>\n\n      <div className=\"info-panel\">\n        <div className=\"stats\">\n          <div className=\"stat\">\n            <span className=\"stat-label\">📍 Wave Position</span>\n            <span className=\"stat-value\">{wavePosition.toFixed(1)}</span>\n          </div>\n          <div className=\"stat\">\n            <span className=\"stat-label\">🎨 Color Phase</span>\n            <span className=\"stat-value\">{Math.floor(colorPhase / 80) + 1}/6</span>\n          </div>\n          <div className=\"stat\">\n            <span className=\"stat-label\">⏱️ Next Color</span>\n            <span className=\"stat-value\">{Math.ceil((480 - colorPhase) / 80)}s</span>\n          </div>\n          <div className=\"stat\">\n            <span className=\"stat-label\">🧭 Direction</span>\n            <span className=\"stat-value\">{waveDirection > 0 ? '→' : '←'}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}