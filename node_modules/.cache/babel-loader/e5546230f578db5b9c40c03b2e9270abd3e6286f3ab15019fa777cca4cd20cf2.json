{"ast":null,"code":"var _jsxFileName = \"/Users/tanmayjoshi/Workspace/react-workspace/assignment2/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [gridSize, setGridSize] = useState({\n    rows: 15,\n    cols: 20\n  });\n  const [wavePosition, setWavePosition] = useState(0);\n  const [waveDirection, setWaveDirection] = useState(1);\n  const [colorPhase, setColorPhase] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(true);\n  const [speed, setSpeed] = useState(150);\n\n  // Generate dynamic wave pattern for each row - 6 columns wave with dynamic effects\n  const generateWavePattern = useCallback((row, time) => {\n    const waveWidth = 6; // Number of columns the wave occupies\n    const centerPosition = wavePosition;\n    return Array.from({\n      length: gridSize.cols\n    }, (_, col) => {\n      // Calculate distance from wave center\n      const distanceFromCenter = Math.abs(col - centerPosition);\n\n      // Dynamic wave width that changes over time\n      const dynamicWaveWidth = waveWidth + Math.sin(time * 0.01) * 2;\n      const waveIntensity = Math.max(0, 1 - distanceFromCenter / (dynamicWaveWidth / 2));\n      if (waveIntensity > 0) {\n        // Create dynamic gradient within the wave\n        const gradientPosition = (col - (centerPosition - dynamicWaveWidth / 2)) / dynamicWaveWidth;\n        const clampedGradient = Math.max(0, Math.min(1, gradientPosition));\n\n        // Add dynamic effects based on row and time\n        const rowEffect = Math.sin(row * 0.5 + time * 0.02) * 0.3 + 0.7;\n        const timeEffect = Math.sin(time * 0.03 + col * 0.1) * 0.2 + 0.8;\n        const waveEffect = Math.sin(distanceFromCenter * 0.5 + time * 0.015) * 0.15 + 0.85;\n\n        // Combine all effects for dynamic intensity\n        const dynamicIntensity = waveIntensity * rowEffect * timeEffect * waveEffect;\n        const dynamicGradient = clampedGradient * (0.5 + 0.5 * Math.sin(time * 0.025 + row * 0.3));\n        return {\n          intensity: Math.max(0, Math.min(1, dynamicIntensity * (0.3 + 0.7 * clampedGradient))),\n          gradientPos: Math.max(0, Math.min(1, dynamicGradient))\n        };\n      }\n      return {\n        intensity: 0,\n        gradientPos: 0\n      };\n    });\n  }, [wavePosition, gridSize.cols, colorPhase]);\n\n  // Generate dynamic color based on phase and position - changes every 4 seconds\n  const getColor = (intensity, gradientPos, phase) => {\n    if (intensity === 0) return '#000000';\n\n    // Color changes every 4 seconds (4000ms / 100ms = 40 cycles)\n    const colorCycle = Math.floor(phase / 40) % 6;\n    const baseHue = colorCycle * 60; // 0, 60, 120, 180, 240, 300 degrees\n\n    // Dynamic hue with wave-like variations\n    const hueVariation = Math.sin(phase * 0.1 + gradientPos * Math.PI) * 30;\n    const hue = (baseHue + gradientPos * 60 + hueVariation) % 360;\n\n    // Dynamic saturation and lightness\n    const saturation = 70 + intensity * 25 + Math.sin(phase * 0.05) * 10;\n    const lightness = 15 + intensity * 45 + Math.cos(phase * 0.08) * 15;\n    return `hsl(${hue}, ${Math.max(0, Math.min(100, saturation))}%, ${Math.max(0, Math.min(100, lightness))}%)`;\n  };\n\n  // Animation loop\n  useEffect(() => {\n    if (!isPlaying) return;\n    const interval = setInterval(() => {\n      setWavePosition(prev => {\n        const newPos = prev + waveDirection;\n        // Reverse direction when reaching edges: start to last, then last to start\n        if (newPos >= gridSize.cols - 3) {\n          setWaveDirection(-1); // Reverse to move left\n          return gridSize.cols - 3;\n        } else if (newPos <= 3) {\n          setWaveDirection(1); // Reverse to move right\n          return 3;\n        }\n        return newPos;\n      });\n      setColorPhase(prev => (prev + 1) % 240); // 240 cycles = 4 seconds at 100ms intervals\n    }, speed);\n    return () => clearInterval(interval);\n  }, [isPlaying, waveDirection, gridSize.cols, speed]);\n  const handleGridSizeChange = (type, value) => {\n    const newValue = Math.max(5, Math.min(30, parseInt(value) || 5));\n    setGridSize(prev => ({\n      ...prev,\n      [type]: newValue\n    }));\n  };\n  const togglePlayPause = () => {\n    setIsPlaying(prev => !prev);\n  };\n  const resetWave = () => {\n    setWavePosition(3); // Start from near the beginning\n    setWaveDirection(1); // Move right initially\n    setColorPhase(0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"\\uD83C\\uDF0A Bouncing Wave Grid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Rows: \", gridSize.rows]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: \"5\",\n            max: \"30\",\n            value: gridSize.rows,\n            onChange: e => handleGridSizeChange('rows', e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Cols: \", gridSize.cols]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: \"5\",\n            max: \"30\",\n            value: gridSize.cols,\n            onChange: e => handleGridSizeChange('cols', e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Speed: \", speed, \"ms\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: \"50\",\n            max: \"500\",\n            value: speed,\n            onChange: e => setSpeed(parseInt(e.target.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: togglePlayPause,\n          className: \"play-button\",\n          children: isPlaying ? '⏸️ Pause' : '▶️ Play'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: resetWave,\n          className: \"reset-button\",\n          children: \"\\uD83D\\uDD04 Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid\",\n        style: {\n          gridTemplateColumns: `repeat(${gridSize.cols}, 1fr)`,\n          gridTemplateRows: `repeat(${gridSize.rows}, 1fr)`\n        },\n        children: Array.from({\n          length: gridSize.rows\n        }, (_, row) => generateWavePattern(row, colorPhase).map((cell, col) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid-cell\",\n          style: {\n            backgroundColor: getColor(cell.intensity, cell.gradientPos, colorPhase),\n            boxShadow: cell.intensity > 0 ? `0 0 ${cell.intensity * 10}px ${getColor(cell.intensity, cell.gradientPos, colorPhase)}` : 'none'\n          }\n        }, `${row}-${col}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 15\n        }, this)))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info-panel\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-label\",\n            children: \"Wave Position:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-value\",\n            children: wavePosition.toFixed(1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-label\",\n            children: \"Color Phase:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-value\",\n            children: [Math.floor(colorPhase / 40) + 1, \"/6\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-label\",\n            children: \"Next Color:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-value\",\n            children: [Math.ceil((240 - colorPhase) / 40), \"s\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-label\",\n            children: \"Direction:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-value\",\n            children: waveDirection > 0 ? '→' : '←'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"Xf4pgsMmpovQJjBQGRc5Y7DyFik=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","jsxDEV","_jsxDEV","App","_s","gridSize","setGridSize","rows","cols","wavePosition","setWavePosition","waveDirection","setWaveDirection","colorPhase","setColorPhase","isPlaying","setIsPlaying","speed","setSpeed","generateWavePattern","row","time","waveWidth","centerPosition","Array","from","length","_","col","distanceFromCenter","Math","abs","dynamicWaveWidth","sin","waveIntensity","max","gradientPosition","clampedGradient","min","rowEffect","timeEffect","waveEffect","dynamicIntensity","dynamicGradient","intensity","gradientPos","getColor","phase","colorCycle","floor","baseHue","hueVariation","PI","hue","saturation","lightness","cos","interval","setInterval","prev","newPos","clearInterval","handleGridSizeChange","type","value","newValue","parseInt","togglePlayPause","resetWave","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","onClick","style","gridTemplateColumns","gridTemplateRows","map","cell","backgroundColor","boxShadow","toFixed","ceil","_c","$RefreshReg$"],"sources":["/Users/tanmayjoshi/Workspace/react-workspace/assignment2/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport './App.css';\n\nconst App = () => {\n  const [gridSize, setGridSize] = useState({ rows: 15, cols: 20 });\n  const [wavePosition, setWavePosition] = useState(0);\n  const [waveDirection, setWaveDirection] = useState(1);\n  const [colorPhase, setColorPhase] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(true);\n  const [speed, setSpeed] = useState(150);\n\n  // Generate dynamic wave pattern for each row - 6 columns wave with dynamic effects\n  const generateWavePattern = useCallback((row, time) => {\n    const waveWidth = 6; // Number of columns the wave occupies\n    const centerPosition = wavePosition;\n    \n    return Array.from({ length: gridSize.cols }, (_, col) => {\n      // Calculate distance from wave center\n      const distanceFromCenter = Math.abs(col - centerPosition);\n      \n      // Dynamic wave width that changes over time\n      const dynamicWaveWidth = waveWidth + Math.sin(time * 0.01) * 2;\n      const waveIntensity = Math.max(0, 1 - (distanceFromCenter / (dynamicWaveWidth / 2)));\n      \n      if (waveIntensity > 0) {\n        // Create dynamic gradient within the wave\n        const gradientPosition = (col - (centerPosition - dynamicWaveWidth/2)) / dynamicWaveWidth;\n        const clampedGradient = Math.max(0, Math.min(1, gradientPosition));\n        \n        // Add dynamic effects based on row and time\n        const rowEffect = Math.sin((row * 0.5) + (time * 0.02)) * 0.3 + 0.7;\n        const timeEffect = Math.sin((time * 0.03) + (col * 0.1)) * 0.2 + 0.8;\n        const waveEffect = Math.sin((distanceFromCenter * 0.5) + (time * 0.015)) * 0.15 + 0.85;\n        \n        // Combine all effects for dynamic intensity\n        const dynamicIntensity = waveIntensity * rowEffect * timeEffect * waveEffect;\n        const dynamicGradient = clampedGradient * (0.5 + 0.5 * Math.sin(time * 0.025 + row * 0.3));\n        \n        return {\n          intensity: Math.max(0, Math.min(1, dynamicIntensity * (0.3 + 0.7 * clampedGradient))),\n          gradientPos: Math.max(0, Math.min(1, dynamicGradient))\n        };\n      }\n      return { intensity: 0, gradientPos: 0 };\n    });\n  }, [wavePosition, gridSize.cols, colorPhase]);\n\n  // Generate dynamic color based on phase and position - changes every 4 seconds\n  const getColor = (intensity, gradientPos, phase) => {\n    if (intensity === 0) return '#000000';\n    \n    // Color changes every 4 seconds (4000ms / 100ms = 40 cycles)\n    const colorCycle = Math.floor(phase / 40) % 6;\n    const baseHue = colorCycle * 60; // 0, 60, 120, 180, 240, 300 degrees\n    \n    // Dynamic hue with wave-like variations\n    const hueVariation = Math.sin(phase * 0.1 + gradientPos * Math.PI) * 30;\n    const hue = (baseHue + gradientPos * 60 + hueVariation) % 360;\n    \n    // Dynamic saturation and lightness\n    const saturation = 70 + intensity * 25 + Math.sin(phase * 0.05) * 10;\n    const lightness = 15 + intensity * 45 + Math.cos(phase * 0.08) * 15;\n    \n    return `hsl(${hue}, ${Math.max(0, Math.min(100, saturation))}%, ${Math.max(0, Math.min(100, lightness))}%)`;\n  };\n\n  // Animation loop\n  useEffect(() => {\n    if (!isPlaying) return;\n\n    const interval = setInterval(() => {\n      setWavePosition(prev => {\n        const newPos = prev + waveDirection;\n        // Reverse direction when reaching edges: start to last, then last to start\n        if (newPos >= gridSize.cols - 3) {\n          setWaveDirection(-1); // Reverse to move left\n          return gridSize.cols - 3;\n        } else if (newPos <= 3) {\n          setWaveDirection(1); // Reverse to move right\n          return 3;\n        }\n        return newPos;\n      });\n      \n      setColorPhase(prev => (prev + 1) % 240); // 240 cycles = 4 seconds at 100ms intervals\n    }, speed);\n\n    return () => clearInterval(interval);\n  }, [isPlaying, waveDirection, gridSize.cols, speed]);\n\n  const handleGridSizeChange = (type, value) => {\n    const newValue = Math.max(5, Math.min(30, parseInt(value) || 5));\n    setGridSize(prev => ({\n      ...prev,\n      [type]: newValue\n    }));\n  };\n\n  const togglePlayPause = () => {\n    setIsPlaying(prev => !prev);\n  };\n\n  const resetWave = () => {\n    setWavePosition(3); // Start from near the beginning\n    setWaveDirection(1); // Move right initially\n    setColorPhase(0);\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"header\">\n        <h1 className=\"title\">🌊 Bouncing Wave Grid</h1>\n        <div className=\"controls\">\n          <div className=\"control-group\">\n            <label>Rows: {gridSize.rows}</label>\n            <input\n              type=\"range\"\n              min=\"5\"\n              max=\"30\"\n              value={gridSize.rows}\n              onChange={(e) => handleGridSizeChange('rows', e.target.value)}\n            />\n          </div>\n          <div className=\"control-group\">\n            <label>Cols: {gridSize.cols}</label>\n            <input\n              type=\"range\"\n              min=\"5\"\n              max=\"30\"\n              value={gridSize.cols}\n              onChange={(e) => handleGridSizeChange('cols', e.target.value)}\n            />\n          </div>\n          <div className=\"control-group\">\n            <label>Speed: {speed}ms</label>\n            <input\n              type=\"range\"\n              min=\"50\"\n              max=\"500\"\n              value={speed}\n              onChange={(e) => setSpeed(parseInt(e.target.value))}\n            />\n          </div>\n          <button onClick={togglePlayPause} className=\"play-button\">\n            {isPlaying ? '⏸️ Pause' : '▶️ Play'}\n          </button>\n          <button onClick={resetWave} className=\"reset-button\">\n            🔄 Reset\n          </button>\n        </div>\n      </div>\n\n      <div className=\"grid-container\">\n        <div \n          className=\"grid\"\n          style={{\n            gridTemplateColumns: `repeat(${gridSize.cols}, 1fr)`,\n            gridTemplateRows: `repeat(${gridSize.rows}, 1fr)`\n          }}\n        >\n          {Array.from({ length: gridSize.rows }, (_, row) =>\n            generateWavePattern(row, colorPhase).map((cell, col) => (\n              <div\n                key={`${row}-${col}`}\n                className=\"grid-cell\"\n                style={{\n                  backgroundColor: getColor(cell.intensity, cell.gradientPos, colorPhase),\n                  boxShadow: cell.intensity > 0 \n                    ? `0 0 ${cell.intensity * 10}px ${getColor(cell.intensity, cell.gradientPos, colorPhase)}`\n                    : 'none'\n                }}\n              />\n            ))\n          )}\n        </div>\n      </div>\n\n      <div className=\"info-panel\">\n        <div className=\"stats\">\n          <div className=\"stat\">\n            <span className=\"stat-label\">Wave Position:</span>\n            <span className=\"stat-value\">{wavePosition.toFixed(1)}</span>\n          </div>\n          <div className=\"stat\">\n            <span className=\"stat-label\">Color Phase:</span>\n            <span className=\"stat-value\">{Math.floor(colorPhase / 40) + 1}/6</span>\n          </div>\n          <div className=\"stat\">\n            <span className=\"stat-label\">Next Color:</span>\n            <span className=\"stat-value\">{Math.ceil((240 - colorPhase) / 40)}s</span>\n          </div>\n          <div className=\"stat\">\n            <span className=\"stat-label\">Direction:</span>\n            <span className=\"stat-value\">{waveDirection > 0 ? '→' : '←'}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}